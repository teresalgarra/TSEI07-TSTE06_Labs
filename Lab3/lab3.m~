%% LAB 3 %%

close all;
clc;

load('Filters1.mat');                           % Importing the values

freqz(f0); % f0 is a lowpass filter with wcT = 0.45*pi and wsT = 0.55*pi.

freqz(f1); % f1 is a highpass filter with wsT = 0.45*pi and wcT = 0.55*pi.

%% QUESTION 3.1.1 %%

close all;
clc;

load('Filters2.mat');                           % Importing the values

figure;                                         % Ploting
subplot(2,1,1);                                 % Subplot
stem(f0);                                       % Ploting f0
axis tight;                                     % Set limited axis
grid;                                           % Grid set on
title('Impulse Response f0 (lowpass');          % Title
subplot(2,1,2);                                 % Subplot
stem(f1);                                       % Ploting f1
axis tight;                                     % Set limited axis
grid;                                           % Grid set on
title('Impulse Response f1 (highpass)');        % Title

N0 = length(f0);
N1 = length(f1);

% f0 is a filter with an even number of samples and it's symmetric, so it's
% a type II filter. It's length is 93, so the filter order is 93.

% f1 is a filter with an even number of samples and it's anti-symmetric, 
% so it's a type IV filter. It's length is 93, so the filter order is 93.

%% QUESTION 3.1.2 %%

close all;
clc;

load('Filters2.mat');                           % Importing the values

figure;                                         % Ploting
freqz(f0);                                      % Ploting f0
grid;                                           % Grid set on
title('Impulse Response f0 (lowpass)');         % Title
figure;
freqz(f1);                                      % Ploting f1
grid;                                           % Grid set on
title('Impulse Response f1 (highpass)');        % Title

% Both F0 and F1 start in -1.24. 

% F0 starts going down to -2.27 and then goes up to 3.075. When f = pi, F1
% is 2.77.

% F1 starts going up to 3.075 and then starts going down, but it doesn't
% reach the minimum point in the interval (0, pi). When f = pi, F1 is 2.5

%% QUESTION 3.1.3.1 %%

close all;
clc;

load('Filters1.mat');                           % Importing the values

wc0T = 0.45*pi;                                 % wc for f0
ws0T = 0.55*pi;                                 % ws for f0
ws1T = 0.45*pi;                                 % wc for f1
wc1T = 0.55*pi;                                 % ws for f1

[F0, ~] = freqz(f0);                            % Frequency response of f0
f0_m = 20*log10(abs(F0));                       % Magnitude Response of f0
[F1, ~] = freqz(f1);                            % Frequency response of f1
f1_m = 20*log10(abs(F1));                       % Magnitude Response of f1

f0_dc = f0_m(1:200);                            % Samples for dc for F0
f0_ds = f0_m(300:end);                          % Samples for ds for F0
f1_dc = f1_m(300:end);                          % Samples for dc for F1
f1_ds = f1_m(1:200);                            % Samples for ds for F1

dc0_max = max(f0_dc);                           % Max value for dc for F0
dc0_min = min(f0_dc);                           % Min value for dc for F0
ds0 = max(f0_ds);                               % Max value for ds for F0

dc1_max = max(f1_dc);                           % Max value for dc for F1
dc1_min = min(f1_dc);                           % Min value for dc for F1
ds1 = max(f1_ds);                               % Max value for ds for F1

% For F0 we get that is approximately dc = 0.1 and ds = 32

% For F1 we get that is approximately dc = 0.1 and ds = 32

%% QUESTION 3.1.3.2 %%

close all;
clc;

load('Filters2.mat');                           % Importing the values

wc0T = 0.45*pi;                                 % wc for F0
ws0T = 0.55*pi;                                 % ws for F0
ws1T = 0.45*pi;                                 % wc for F1
wc1T = 0.55*pi;                                 % ws for F1

[F0, ~] = freqz(f0);                            % Frequency response of F0
f0_m = 20*log10(abs(F0));                       % Magnitude Response of F0
[F1, ~] = freqz(f1);                            % Frequency response of F1
f1_m = 20*log10(abs(F1));                       % Magnitude Response of F0

f0_dc = f0_m(1:200);                            % Samples for dc for F0
f0_ds = f0_m(300:end);                          % Samples for ds for F0
f1_dc = f1_m(300:end);                          % Samples for dc for F1
f1_ds = f1_m(1:200);                            % Samples for ds for F1

dc0_max = max(f0_dc);                           % Max value for dc for F0
dc0_min = min(f0_dc);                           % Min value for dc for F0
ds0 = max(f0_ds);                               % Max value for ds for F0

dc1_max = max(f1_dc);                           % Max value for dc for F1
dc1_min = min(f1_dc);                           % Min value for dc for F1
ds1 = max(f1_ds);                               % Max value for ds for F1

% For F0 we get that is approximately dc = 0.0027 and ds = 64

% For F1 we get that is approximately dc = 0.0027 and ds = 64

%% QUESTION 3.1.3.3 %%

close all;
clc;

load('Filters3.mat');                           % Importing the values

wc0T = 0.45*pi;                                 % wc for F0
ws0T = 0.55*pi;                                 % ws for F0
ws1T = 0.45*pi;                                 % wc for F1
wc1T = 0.55*pi;                                 % ws for F1

[F0, ~] = freqz(f0);                            % Frequency response of F0
f0_m = 20*log10(abs(F0));                       % Magnitude Response of F0
[F1, ~] = freqz(f1);                            % Frequency response of F1
f1_m = 20*log10(abs(F1));                       % Magnitude Response of F0

f0_dc = f0_m(1:200);                            % Samples for dc for F0
f0_ds = f0_m(300:end);                          % Samples for ds for F0
f1_dc = f1_m(300:end);                          % Samples for dc for F1
f1_ds = f1_m(1:200);                            % Samples for ds for F1

dc0_max = max(f0_dc);                           % Max value for dc for F0
dc0_min = min(f0_dc);                           % Min value for dc for F0
ds0 = max(f0_ds);                               % Max value for ds for F0

dc1_max = max(f1_dc);                           % Max value for dc for F1
dc1_min = min(f1_dc);                           % Min value for dc for F1
ds1 = max(f1_ds);                               % Max value for ds for F1

% For F0 we get that is approximately dc = 0.0002166 and ds = 86

% For F1 we get that is approximately dc = 0.0002166 and ds = 86

%% QUESTION 3.1.4 %%

close all;
clc;

load('Filters2.mat');                           % Importing the values

figure;                                         % Ploting
subplot(2,1,1);                                 % Subplot
zplane(f0);                                     % Poles and zeros
grid;                                           % Grid set on
title('Poles and Zeros of f0 (lowpass)');       % Title
subplot(2,1,2);                                 % Subplot
zplane(f1);                                     % Poles and zeros
grid;                                           % Grid set on
title('Poles and Zeros of f1 (highpass)');      % Title

% As they are lowpass and highpass, the diagram of poles and zeros is the
% same but inverted regarding the y-axis. We can also see how we have every
% zero in zn with its respective zero in 1/zn

%% QUESTION 3.2.1 %%

close all;
clc;

load('Filters2.mat');                           % Importing the values

c0 = conv(f0, h0);                              % Cascade of f0 and h0
c1 = conv(f1, h1);                              % Cascade of f1 and h1
c2 = conv(f0, h1);                              % Cascade of f0 and h1

c0_pi = c0(0:pi);                               % Selecting until pi
c1_pi = c1(0:pi);                               % Selecting until pi
c2_pi = c2(0:pi);                               % Selecting until pi

figure;                                         % Ploting
freqz(f0);                                      % Frequency Response
title('Frequency response of f0');              % Title

figure;                                         % Ploting
freqz(c0);                                      % Frequency Response
title('Frequency response of C0');              % Title

figure;                                         % Ploting
freqz(c0_pi);                                   % Frequency Response
title('Frequency response of C0 (0:pi)');       % Title

figure;                                         % Ploting
freqz(f1);                                      % Frequency Response
title('Frequency response of f1');              % Title

figure;                                         % Ploting
freqz(c1);                                      % Frequency Response
title('Frequency response of C1');              % Title

figure;                                         % Ploting
freqz(c1_pi);                                   % Frequency Response
title('Frequency response of C1 (0:pi)');       % Title

figure;                                         % Ploting
freqz(c2);                                      % Frequency Response
title('Frequency response of C2');              % Title

figure;                                         % Ploting
freqz(c2_pi);                                   % Frequency Response
title('Frequency response of C2 (0:pi)');       % Title

%% QUESTION 3.2.2.1 %%

close all;
clc;

load('Filters1.mat');                           % Importing the values

c0 = conv(f0, h0);                              % Cascade of f0_2 and h0
c1 = conv(f1, h1);                              % Cascade of f1_2 and h1
c2 = conv(f0, h1);                              % Cascade of f0_2 and h1

for i=1:length(c0)/2                            % Zeroth Polyphase Component
    g0(i) = c0(2*i);                            % We take every second sample
end

for i=1:length(c1)/2                            % Zeroth Polyphase Component
    g1(i) = c1(2*i);                            % We take every second sample
end

for i=1:length(c2)/2                            % Zeroth Polyphase Component
    g2(i) = c2(2*i);                            % We take every second sample
end

figure;                                         % Ploting
subplot(4,1,1);                                 % Subplot
stem(f0);                                       % Stem f0
axis tight;                                     % Set limited axis
subplot(4,1,2);                                 % Subplot
stem(h0);                                       % Stem h0
axis tight;                                     % Set limited axis
subplot(4,1,3);                                 % Subplot
stem(c0);                                       % Stem the cascade
axis tight;                                     % Set limited axis
subplot(4,1,4);                                 % Subplot
stem(g0, 'r');                                  % Stem zeroth polyphase
axis tight;                                     % Set limited axis

figure;                                         % Ploting
subplot(4,1,1);                                 % Subplot
stem(f1);                                       % Stem f1
axis tight;                                     % Set limited axis
subplot(4,1,2);                                 % Subplot
stem(h1);                                       % Stem h1
axis tight;                                     % Set limited axis
subplot(4,1,3);                                 % Subplot
stem(c1);                                       % Stem the cascade
axis tight;                                     % Set limited axis
subplot(4,1,4);                                 % Subplot
stem(g1, 'r');                                  % Stem zeroth polyphase
axis tight;                                     % Set limited axis

figure;                                         % Ploting
subplot(4,1,1);                                 % Subplot
stem(f0);                                       % Stem f0
axis tight;                                     % Set limited axis
subplot(4,1,2);                                 % Subplot
stem(h1);                                       % Stem h1
axis tight;                                     % Set limited axis
subplot(4,1,3);                                 % Subplot
stem(c2);                                       % Stem the cascade
axis tight;                                     % Set limited axis
subplot(4,1,4);                                 % Subplot
stem(g2, 'r');                                  % Stem zeroth polyphase
axis tight;                                     % Set limited axis

%% QUESTION 3.2.2.2 %%

close all;
clc;

load('Filters2.mat');                           % Importing the values

c0 = conv(f0, h0);                              % Cascade of f0_2 and h0
c1 = conv(f1, h1);                              % Cascade of f1_2 and h1
c2 = conv(f0, h1);                              % Cascade of f0_2 and h1

for i=1:length(c0)/2                            % Zeroth Polyphase Component
    g0(i) = c0(2*i);                            % We take every second sample
end

for i=1:length(c1)/2                            % Zeroth Polyphase Component
    g1(i) = c1(2*i);                            % We take every second sample
end

for i=1:length(c2)/2                            % Zeroth Polyphase Component
    g2(i) = c2(2*i);                            % We take every second sample
end

figure;                                         % Ploting
subplot(4,1,1);                                 % Subplot
stem(f0);                                       % Stem f0
axis tight;                                     % Set limited axis
subplot(4,1,2);                                 % Subplot
stem(h0);                                       % Stem h0
axis tight;                                     % Set limited axis
subplot(4,1,3);                                 % Subplot
stem(c0);                                       % Stem the cascade
axis tight;                                     % Set limited axis
subplot(4,1,4);                                 % Subplot
stem(g0, 'r');                                  % Stem zeroth polyphase
axis tight;                                     % Set limited axis

figure;                                         % Ploting
subplot(4,1,1);                                 % Subplot
stem(f1);                                       % Stem f1
axis tight;                                     % Set limited axis
subplot(4,1,2);                                 % Subplot
stem(h1);                                       % Stem h1
axis tight;                                     % Set limited axis
subplot(4,1,3);                                 % Subplot
stem(c1);                                       % Stem the cascade
axis tight;                                     % Set limited axis
subplot(4,1,4);                                 % Subplot
stem(g1, 'r');                                  % Stem zeroth polyphase
axis tight;                                     % Set limited axis

figure;                                         % Ploting
subplot(4,1,1);                                 % Subplot
stem(f0);                                       % Stem f0
axis tight;                                     % Set limited axis
subplot(4,1,2);                                 % Subplot
stem(h1);                                       % Stem h1
axis tight;                                     % Set limited axis
subplot(4,1,3);                                 % Subplot
stem(c2);                                       % Stem the cascade
axis tight;                                     % Set limited axis
subplot(4,1,4);                                 % Subplot
stem(g2, 'r');                                  % Stem zeroth polyphase
axis tight;                                     % Set limited axis

%% QUESTION 3.2.2.3 %%

close all;
clc;

load('Filters3.mat');                           % Importing the values

c0 = conv(2*f0, h0);                            % Cascade of f0_2 and h0
c1 = conv(2*f1, h1);                            % Cascade of f1_2 and h1
c2 = conv(2*f0, h1);                            % Cascade of f0_2 and h1

g0 = c0(1:2:end);                               % Zeroth Polyphase
g1 = c1(1:2:end);                               % Zeroth Polyphase
g2 = c2(1:2:end);                               % Zeroth Polyphase

figure;                                         % Ploting
subplot(4,1,1);                                 % Subplot
stem(f0);                                       % Stem f0
axis tight;                                     % Set limited axis
subplot(4,1,2);                                 % Subplot
stem(h0);                                       % Stem h0
axis tight;                                     % Set limited axis
subplot(4,1,3);                                 % Subplot
stem(c0);                                       % Stem the cascade
axis tight;                                     % Set limited axis
subplot(4,1,4);                                 % Subplot
stem(g0, 'r');                                  % Stem zeroth polyphase
axis tight;                                     % Set limited axis

figure;                                         % Ploting
subplot(4,1,1);                                 % Subplot
stem(f1);                                       % Stem f1
axis tight;                                     % Set limited axis
subplot(4,1,2);                                 % Subplot
stem(h1);                                       % Stem h1
axis tight;                                     % Set limited axis
subplot(4,1,3);                                 % Subplot
stem(c1);                                       % Stem the cascade
axis tight;                                     % Set limited axis
subplot(4,1,4);                                 % Subplot
stem(g1, 'r');                                  % Stem zeroth polyphase
axis tight;                                     % Set limited axis

figure;                                         % Ploting
subplot(4,1,1);                                 % Subplot
stem(f0);                                       % Stem f0
axis tight;                                     % Set limited axis
subplot(4,1,2);                                 % Subplot
stem(h1);                                       % Stem h1
axis tight;                                     % Set limited axis
subplot(4,1,3);                                 % Subplot
stem(c2);                                       % Stem the cascade
axis tight;                                     % Set limited axis
subplot(4,1,4);                                 % Subplot
stem(g2, 'r');                                  % Stem zeroth polyphase
axis tight;                                     % Set limited axis

%% QUESTION 3.2.3.1 %%

close all;
clc;

load('Filters1.mat');                           % Importing the values

c0 = conv(2*f0, h0);                            % Cascade of f0_2 and h0
c1 = conv(2*f1, h1);                            % Cascade of f1_2 and h1
c2 = conv(2*f0, h1);                            % Cascade of f0_2 and h1

g0 = c0(1:2:end);                               % Zeroth Polyphase
g1 = c1(1:2:end);                               % Zeroth Polyphase
g2 = c2(1:2:end);                               % Zeroth Polyphase

[G0, ~] = freqz(g0);                            % Frequency response of g0
g0_m = 20*log10(abs(G0));                       % Magnitude Response of g0
[G1, ~] = freqz(g1);                            % Frequency response of g1
g1_m = 20*log10(abs(G1));                       % Magnitude Response of g1
[G2, ~] = freqz(g2);                            % Frequency response of g2
g2_m = 20*log10(abs(G2));                       % Magnitude Response of g2

g0_dc = g0_m(1:200);                            % Samples for dc for g0
g1_dc = g1_m(1:200);                            % Samples for dc for g1
g2_dc = g2_m(100:300);                          % Samples for dc for g2

dc0_max = max(g0_dc);                           % Max value for dc for g0
dc0_min = min(g0_dc);                           % Min value for dc for g0

dc1_max = max(g1_dc);                           % Max value for dc for g1
dc1_min = min(g1_dc);                           % Min value for dc for g1

dc2_max = max(g2_dc);                           % Max value for dc for g2
dc2_min = min(g2_dc);                           % Min value for dc for g2

% For G0 we get dc = 0.2 approximately (near to 0), that in linear scale 
% means that we have 1 of transfer function (we get what we receive).

% For G1 we get dc = 0.2 approximately (near to 0), that in linear scale 
% means that we have 1 of transfer function (we get what we receive).

% For G2 we get dc = -300 approximately (near to 0), that in linear scale 
% means that we have -infinity of transfer function (we have infinte error
% because we're receiving something that we did not send).

%% QUESTION 3.2.3.2 %%

close all;
clc;

load('Filters2.mat');                           % Importing the values

c0 = conv(2*f0, h0);                            % Cascade of f0_2 and h0
c1 = conv(2*f1, h1);                            % Cascade of f1_2 and h1
c2 = conv(2*f0, h1);                            % Cascade of f0_2 and h1

g0 = c0(1:2:end);                               % Zeroth Polyphase
g1 = c1(1:2:end);                               % Zeroth Polyphase
g2 = c2(1:2:end);                               % Zeroth Polyphase

[G0, ~] = freqz(g0);                            % Frequency response of g0
g0_m = 20*log10(abs(G0));                       % Magnitude Response of g0
[G1, ~] = freqz(g1);                            % Frequency response of g1
g1_m = 20*log10(abs(G1));                       % Magnitude Response of g1
[G2, ~] = freqz(g2);                            % Frequency response of g2
g2_m = 20*log10(abs(G2));                       % Magnitude Response of g2

g0_dc = g0_m(1:200);                            % Samples for dc for g0
g1_dc = g1_m(1:200);                            % Samples for dc for g1
g2_dc = g2_m(100:300);                          % Samples for dc for g2

dc0_max = max(g0_dc);                           % Max value for dc for g0
dc0_min = min(g0_dc);                           % Min value for dc for g0

dc1_max = max(g1_dc);                           % Max value for dc for g1
dc1_min = min(g1_dc);                           % Min value for dc for g1

dc2_max = max(g2_dc);                           % Max value for dc for g2
dc2_min = min(g2_dc);                           % Min value for dc for g2

% For G0 we get dc = 0.005 approximately (near to 0), that in linear scale 
% means that we have 1 of transfer function (we get what we receive).

% For G1 we get dc = 0.005 approximately (near to 0), that in linear scale 
% means that we have 1 of transfer function (we get what we receive).

% For G2 we get dc = -120 approximately (near to 0), that in linear scale 
% means that we have -infinity of transfer function (we have infinte error
% because we're receiving something that we did not send).

%% QUESTION 3.2.3.3 %%

close all;
clc;

load('Filters3.mat');                           % Importing the values

c0 = conv(2*f0, h0);                            % Cascade of f0_2 and h0
c1 = conv(2*f1, h1);                            % Cascade of f1_2 and h1
c2 = conv(2*f0, h1);                            % Cascade of f0_2 and h1

g0 = c0(1:2:end);                               % Zeroth Polyphase
g1 = c1(1:2:end);                               % Zeroth Polyphase
g2 = c2(1:2:end);                               % Zeroth Polyphase

[G0, ~] = freqz(g0);                            % Frequency response of g0
g0_m = 20*log10(abs(G0));                       % Magnitude Response of g0
[G1, ~] = freqz(g1);                            % Frequency response of g1
g1_m = 20*log10(abs(G1));                       % Magnitude Response of g1
[G2, ~] = freqz(g2);                            % Frequency response of g2
g2_m = 20*log10(abs(G2));                       % Magnitude Response of g2

g0_dc = g0_m(1:200);                            % Samples for dc for g0
g1_dc = g1_m(1:200);                            % Samples for dc for g1
g2_dc = g2_m(100:300);                          % Samples for dc for g2

dc0_max = max(g0_dc);                           % Max value for dc for g0
dc0_min = min(g0_dc);                           % Min value for dc for g0

dc1_max = max(g1_dc);                           % Max value for dc for g1
dc1_min = min(g1_dc);                           % Min value for dc for g1

dc2_max = max(g2_dc);                           % Max value for dc for g2
dc2_min = min(g2_dc);                           % Min value for dc for g2

% For G0 we get dc = 0.0004 approximately (near to 0), that in linear scale 
% means that we have 1 of transfer function (we get what we receive).

% For G1 we get dc = 0.0004 approximately (near to 0), that in linear scale 
% means that we have 1 of transfer function (we get what we receive).

% For G2 we get dc = -200 approximately (near to 0), that in linear scale 
% means that we have -infinity of transfer function (we have infinte error
% because we're receiving something that we did not send).

%% QUESTION 3.2.4 %%

close all;
clc;

load('Filters2.mat');                           % Importing the values

[F0, ~] = freqz(f0);                            % Frequency Response of f0
[F1, ~] = freqz(f1);                            % Frequency Response of f1

R0 = (abs(F0)).^2 + (abs(F1)).^2;               % Operation Required

load('Filters4.mat');                           % Importing the values

[F2, ~] = freqz(f0);                            % Frequency Response of f0
[F3, ~] = freqz(f1);                            % Frequency Response of f1

R1 = (abs(F2)).^2 + (abs(F3)).^2;               % Operation Required

figure;                                         % Ploting
subplot(2,1,1);                                 % Subplot
plot(R0);                                       % Ploting the result
axis tight;                                     % Set limited axis
subplot(2,1,2);                                 % Subplot
plot(R1);                                       % Ploting the result
axis tight;                                     % Set limited axis

%% QUESTION 3.3.1 %%

close all;
clc;

constellationplot;                              % Given function


%% QUESTION 3.3.2 %%

close all;
clc;

load('Inputs.mat');                             % Importing the values

s0_2 = upsample(2*s0, 2);                       % Upsampling s0
s1_2 = upsample(2*s1, 2);                       % Upsampling s1

x0 = conv(s0_2, m0);                            % Cascade of s0_2 and m0
x1 = conv(s1_2, m1);                            % Cascade of s1_2 and m1

g0 = downsample(x0, 2);                         % Downsampling x0
g1 = downsample(x1, 2);                         % Downsampling x1

figure;                                         % Ploting
freqz(g0);                                      % Frequency Response

figure;                                         % Ploting
freqz(g1);                                      % Frequency Response

%% QUESTION 3.3.3 %%

close all;
clc;

load('Inputs.mat');                             % Importing the values

N = length(m0);                                 % Filter Order
dly = N/2;                                      % Delay Samples

s0_dly = s0(dly+1:end);                         % Ignoring the delay
s1_dly = s1(dly+1:end);                         % Ignoring the delay

s0_2 = upsample(2*s0_dly, 2);                   % Upsampling s0
s1_2 = upsample(2*s1_dly, 2);                   % Upsampling s1

x0 = conv(s0_2, m0);                            % Cascade of s0_2 and m0
x1 = conv(s1_2, m1);                            % Cascade of s1_2 and m1

g0 = downsample(x0, 2);                         % Downsampling x0
g1 = downsample(x1, 2);                         % Downsampling x1

figure;                                         % Ploting
freqz(g0);                                      % Frequency Response

figure;                                         % Ploting
freqz(g1);                                      % Frequency Response

%% QUESTION 3.3.4 %%

close all;
clc;

load('Inputs.mat');                             % Importing the values

N = length(m0);                                 % Filter Order
dly = N/2;                                      % Delay Samples

s0_dly = s0(dly+1:end);                         % Ignoring the delay
s1_dly = s1(dly+1:end);                         % Ignoring the delay

s0_2 = upsample(2*s0_dly, 2);                   % Upsampling s0
s1_2 = upsample(2*s1_dly, 2);                   % Upsampling s1

x0 = conv(s0_2, m0);                            % Cascade of s0_2 and m0
x1 = conv(s1_2, m1);                            % Cascade of s1_2 and m1

g0 = downsample(x0, 2);                         % Downsampling x0
g1 = downsample(x1, 2);                         % Downsampling x1

m0r = Sym2Msg(g0, 16);                          % Output as text message
m1r = Sym2Msg(g1, 16);                          % Output as text message

disp(m0r);                                      % Display text
disp(m1r);                                      % Display text

%% QUESTION 3.3.5.1 %%

close all;
clc;

load('Filters1.mat');                           % Importing the values

N = length(h0);                                 % Filter Order
dly = N/2;                                      % Delay Samples

f0_dly = f0(dly+1:dly+280);                        % Ignoring the delay
f1_dly = f1(dly+1:dly+280);                         % Ignoring the delay

f0_2 = upsample(f0_dly, 2);                     % Upsampling s0
f1_2 = upsample(f1_dly, 2);                     % Upsampling s1

x0 = conv(f0_2, h0);                            % Cascade of s0_2 and m0
x1 = conv(f1_2, h1);                            % Cascade of s1_2 and m1

g0 = downsample(x0, 2);                         % Downsampling x0
g1 = downsample(x1, 2);                         % Downsampling x1

figure;                                         % Ploting
freqz(g0);                                      % Frequency Response

figure;                                         % Ploting
freqz(g1);                                      % Frequency Response

%% QUESTION 3.3.5.2 %%

close all;
clc;

load('Filters2.mat');                           % Importing the values

N = length(h0);                                 % Filter Order
dly = N/2;                                      % Delay Samples

f0_dly = f0(dly+1:dly+280);                     % Ignoring the delay
f1_dly = f1(dly+1:dly+280);                     % Ignoring the delay

f0_2 = upsample(f0_dly, 2);                     % Upsampling s0
f1_2 = upsample(f1_dly, 2);                     % Upsampling s1

x0 = conv(f0_2, h0);                            % Cascade of s0_2 and m0
x1 = conv(f1_2, h1);                            % Cascade of s1_2 and m1

g0 = downsample(x0, 2);                         % Downsampling x0
g1 = downsample(x1, 2);                         % Downsampling x1

figure;                                         % Ploting
freqz(g0);                                      % Frequency Response

figure;                                         % Ploting
freqz(g1);                                      % Frequency Response

%% QUESTION 3.3.5.3 %%

close all;
clc;

load('Filters3.mat');                           % Importing the values

N = length(h0);                                 % Filter Order
dly = N/2;                                      % Delay Samples

f0_dly = f0(dly+1:dly+280);                     % Ignoring the delay
f1_dly = f1(dly+1:dly+280);                     % Ignoring the delay

f0_2 = upsample(f0_dly, 2);                     % Upsampling s0
f1_2 = upsample(f1_dly, 2);                     % Upsampling s1

x0 = conv(f0_2, h0);                            % Cascade of s0_2 and m0
x1 = conv(f1_2, h1);                            % Cascade of s1_2 and m1

g0 = downsample(x0, 2);                         % Downsampling x0
g1 = downsample(x1, 2);                         % Downsampling x1

figure;                                         % Ploting
freqz(g0);                                      % Frequency Response

figure;                                         % Ploting
freqz(g1);                                      % Frequency Response

%% QUESTION 3.3.6 %%

close all;
clc;

load('Filters1.mat');                           % Importing the values
load('Inputs.mat');                             % Importing the values

N = length(f0);                                 % Filter Order
dly = N/2;                                      % Delay Samples

s0_2 = upsample(s0, 2);                         % Upsampling s0
s1_2 = upsample(s1, 2);                         % Upsampling s1

x0 = conv(s0_2, f0);                            % Cascade of s0_2 and f0
x1 = conv(s1_2, f1);                            % Cascade of s1_2 and f1

y0 = conv(x0, h0);                              % Cascade of x0 and h0
y1 = conv(x1, h1);                              % Cascade of x1 and h1

g0 = downsample(y0, 2);                         % Downsampling x0
g1 = downsample(y1, 2);                         % Downsampling x1

g0_f = g0(dly+1:dly+280);                       % Ignoring the delay and error
g1_f = g1(dly+1:dly+280);                       % Ignoring the delay and error

s0r = Sym2Msg(s0, 16);                          % Output as text message
s1r = Sym2Msg(s1, 16);                          % Output as text message

m0r = Sym2Msg(2*g0_f, 16);                      % Output as text message
m1r = Sym2Msg(2*g1_f, 16);                      % Output as text message

SNR_s0 = 10*log(sum(abs(s0).^2)/sum(abs(g0_f-s0).^2));   %SNR of s0
SNR_s1 = 10*log(sum(abs(s1).^2)/sum(abs(g1_f-s1).^2));   %SNR of s1

% SNR_s0 is 13,7084 dB
% SNR_s1 is 13,7621 dB

% s0r = The message for channel one
% m0r = The message for channel one
% s1r = The message for channel two
% m1r = The message for channel two
